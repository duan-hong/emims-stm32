ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"system_stm32f1xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	2
  21              		.global	SystemInit
  22              		.thumb
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB65:
  27              		.file 1 "Core/Src/system_stm32f1xx.c"
   1:Core/Src/system_stm32f1xx.c **** /**
   2:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f1xx.c ****   * @file    system_stm32f1xx.c
   4:Core/Src/system_stm32f1xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f1xx.c ****   * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f1xx.c ****   * 
   7:Core/Src/system_stm32f1xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
   8:Core/Src/system_stm32f1xx.c ****   *     user application:
   9:Core/Src/system_stm32f1xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  10:Core/Src/system_stm32f1xx.c ****   *                      factors, AHB/APBx prescalers and Flash settings). 
  11:Core/Src/system_stm32f1xx.c ****   *                      This function is called at startup just after reset and 
  12:Core/Src/system_stm32f1xx.c ****   *                      before branch to main program. This call is made inside
  13:Core/Src/system_stm32f1xx.c ****   *                      the "startup_stm32f1xx_xx.s" file.
  14:Core/Src/system_stm32f1xx.c ****   *
  15:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:Core/Src/system_stm32f1xx.c ****   *                                  by the user application to setup the SysTick 
  17:Core/Src/system_stm32f1xx.c ****   *                                  timer or configure other parameters.
  18:Core/Src/system_stm32f1xx.c ****   *                                     
  19:Core/Src/system_stm32f1xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:Core/Src/system_stm32f1xx.c ****   *                                 be called whenever the core clock is changed
  21:Core/Src/system_stm32f1xx.c ****   *                                 during program execution.
  22:Core/Src/system_stm32f1xx.c ****   *
  23:Core/Src/system_stm32f1xx.c ****   * 2. After each device reset the HSI (8 MHz) is used as system clock source.
  24:Core/Src/system_stm32f1xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f1xx_xx.s" file, to
  25:Core/Src/system_stm32f1xx.c ****   *    configure the system clock before to branch to main program.
  26:Core/Src/system_stm32f1xx.c ****   *
  27:Core/Src/system_stm32f1xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz (or 25 MHz, depending on
  28:Core/Src/system_stm32f1xx.c ****   *    the product used), refer to "HSE_VALUE". 
  29:Core/Src/system_stm32f1xx.c ****   *    When HSE is used as system clock source, directly or through PLL, and you
  30:Core/Src/system_stm32f1xx.c ****   *    are using different crystal you have to adapt the HSE value to your own
  31:Core/Src/system_stm32f1xx.c ****   *    configuration.
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 2


  32:Core/Src/system_stm32f1xx.c ****   *        
  33:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  34:Core/Src/system_stm32f1xx.c ****   * @attention
  35:Core/Src/system_stm32f1xx.c ****   *
  36:Core/Src/system_stm32f1xx.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  37:Core/Src/system_stm32f1xx.c ****   * All rights reserved.</center></h2>
  38:Core/Src/system_stm32f1xx.c ****   *
  39:Core/Src/system_stm32f1xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  40:Core/Src/system_stm32f1xx.c ****   * the "License"; You may not use this file except in compliance with the
  41:Core/Src/system_stm32f1xx.c ****   * License. You may obtain a copy of the License at:
  42:Core/Src/system_stm32f1xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  43:Core/Src/system_stm32f1xx.c ****   *
  44:Core/Src/system_stm32f1xx.c ****   ******************************************************************************
  45:Core/Src/system_stm32f1xx.c ****   */
  46:Core/Src/system_stm32f1xx.c **** 
  47:Core/Src/system_stm32f1xx.c **** /** @addtogroup CMSIS
  48:Core/Src/system_stm32f1xx.c ****   * @{
  49:Core/Src/system_stm32f1xx.c ****   */
  50:Core/Src/system_stm32f1xx.c **** 
  51:Core/Src/system_stm32f1xx.c **** /** @addtogroup stm32f1xx_system
  52:Core/Src/system_stm32f1xx.c ****   * @{
  53:Core/Src/system_stm32f1xx.c ****   */  
  54:Core/Src/system_stm32f1xx.c ****   
  55:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Includes
  56:Core/Src/system_stm32f1xx.c ****   * @{
  57:Core/Src/system_stm32f1xx.c ****   */
  58:Core/Src/system_stm32f1xx.c **** 
  59:Core/Src/system_stm32f1xx.c **** #include "stm32f1xx.h"
  60:Core/Src/system_stm32f1xx.c **** 
  61:Core/Src/system_stm32f1xx.c **** /**
  62:Core/Src/system_stm32f1xx.c ****   * @}
  63:Core/Src/system_stm32f1xx.c ****   */
  64:Core/Src/system_stm32f1xx.c **** 
  65:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_TypesDefinitions
  66:Core/Src/system_stm32f1xx.c ****   * @{
  67:Core/Src/system_stm32f1xx.c ****   */
  68:Core/Src/system_stm32f1xx.c **** 
  69:Core/Src/system_stm32f1xx.c **** /**
  70:Core/Src/system_stm32f1xx.c ****   * @}
  71:Core/Src/system_stm32f1xx.c ****   */
  72:Core/Src/system_stm32f1xx.c **** 
  73:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Defines
  74:Core/Src/system_stm32f1xx.c ****   * @{
  75:Core/Src/system_stm32f1xx.c ****   */
  76:Core/Src/system_stm32f1xx.c **** 
  77:Core/Src/system_stm32f1xx.c **** #if !defined  (HSE_VALUE) 
  78:Core/Src/system_stm32f1xx.c ****   #define HSE_VALUE               8000000U /*!< Default value of the External oscillator in Hz.
  79:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  80:Core/Src/system_stm32f1xx.c **** #endif /* HSE_VALUE */
  81:Core/Src/system_stm32f1xx.c **** 
  82:Core/Src/system_stm32f1xx.c **** #if !defined  (HSI_VALUE)
  83:Core/Src/system_stm32f1xx.c ****   #define HSI_VALUE               8000000U /*!< Default value of the Internal oscillator in Hz.
  84:Core/Src/system_stm32f1xx.c ****                                                 This value can be provided and adapted by the user 
  85:Core/Src/system_stm32f1xx.c **** #endif /* HSI_VALUE */
  86:Core/Src/system_stm32f1xx.c **** 
  87:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to use external SRAM  */ 
  88:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 3


  89:Core/Src/system_stm32f1xx.c **** /* #define DATA_IN_ExtSRAM */
  90:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
  91:Core/Src/system_stm32f1xx.c **** 
  92:Core/Src/system_stm32f1xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  93:Core/Src/system_stm32f1xx.c ****          configuration. */
  94:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  95:Core/Src/system_stm32f1xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
  96:Core/Src/system_stm32f1xx.c ****      remap of boot address selected */
  97:Core/Src/system_stm32f1xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  98:Core/Src/system_stm32f1xx.c **** 
  99:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 100:Core/Src/system_stm32f1xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 101:Core/Src/system_stm32f1xx.c ****      in Sram else user remap will be done in Flash. */
 102:Core/Src/system_stm32f1xx.c **** /* #define VECT_TAB_SRAM */
 103:Core/Src/system_stm32f1xx.c **** #if defined(VECT_TAB_SRAM)
 104:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM_BASE       /*!< Vector Table base address field.
 105:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 106:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 107:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 108:Core/Src/system_stm32f1xx.c **** #else
 109:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 110:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 111:Core/Src/system_stm32f1xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 112:Core/Src/system_stm32f1xx.c ****                                                      This value must be a multiple of 0x200. */
 113:Core/Src/system_stm32f1xx.c **** #endif /* VECT_TAB_SRAM */
 114:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 115:Core/Src/system_stm32f1xx.c **** 
 116:Core/Src/system_stm32f1xx.c **** /******************************************************************************/
 117:Core/Src/system_stm32f1xx.c **** 
 118:Core/Src/system_stm32f1xx.c **** /**
 119:Core/Src/system_stm32f1xx.c ****   * @}
 120:Core/Src/system_stm32f1xx.c ****   */
 121:Core/Src/system_stm32f1xx.c **** 
 122:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Macros
 123:Core/Src/system_stm32f1xx.c ****   * @{
 124:Core/Src/system_stm32f1xx.c ****   */
 125:Core/Src/system_stm32f1xx.c **** 
 126:Core/Src/system_stm32f1xx.c **** /**
 127:Core/Src/system_stm32f1xx.c ****   * @}
 128:Core/Src/system_stm32f1xx.c ****   */
 129:Core/Src/system_stm32f1xx.c **** 
 130:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Variables
 131:Core/Src/system_stm32f1xx.c ****   * @{
 132:Core/Src/system_stm32f1xx.c ****   */
 133:Core/Src/system_stm32f1xx.c **** 
 134:Core/Src/system_stm32f1xx.c ****   /* This variable is updated in three ways:
 135:Core/Src/system_stm32f1xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 136:Core/Src/system_stm32f1xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 137:Core/Src/system_stm32f1xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 138:Core/Src/system_stm32f1xx.c ****          Note: If you use this function to configure the system clock; then there
 139:Core/Src/system_stm32f1xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 140:Core/Src/system_stm32f1xx.c ****                variable is updated automatically.
 141:Core/Src/system_stm32f1xx.c ****   */
 142:Core/Src/system_stm32f1xx.c **** uint32_t SystemCoreClock = 16000000;
 143:Core/Src/system_stm32f1xx.c **** const uint8_t AHBPrescTable[16U] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 144:Core/Src/system_stm32f1xx.c **** const uint8_t APBPrescTable[8U] =  {0, 0, 0, 0, 1, 2, 3, 4};
 145:Core/Src/system_stm32f1xx.c **** 
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 4


 146:Core/Src/system_stm32f1xx.c **** /**
 147:Core/Src/system_stm32f1xx.c ****   * @}
 148:Core/Src/system_stm32f1xx.c ****   */
 149:Core/Src/system_stm32f1xx.c **** 
 150:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_FunctionPrototypes
 151:Core/Src/system_stm32f1xx.c ****   * @{
 152:Core/Src/system_stm32f1xx.c ****   */
 153:Core/Src/system_stm32f1xx.c **** 
 154:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 155:Core/Src/system_stm32f1xx.c **** #ifdef DATA_IN_ExtSRAM
 156:Core/Src/system_stm32f1xx.c ****   static void SystemInit_ExtMemCtl(void); 
 157:Core/Src/system_stm32f1xx.c **** #endif /* DATA_IN_ExtSRAM */
 158:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xE || STM32F101xE || STM32F101xG || STM32F103xE || STM32F103xG */
 159:Core/Src/system_stm32f1xx.c **** 
 160:Core/Src/system_stm32f1xx.c **** /**
 161:Core/Src/system_stm32f1xx.c ****   * @}
 162:Core/Src/system_stm32f1xx.c ****   */
 163:Core/Src/system_stm32f1xx.c **** 
 164:Core/Src/system_stm32f1xx.c **** /** @addtogroup STM32F1xx_System_Private_Functions
 165:Core/Src/system_stm32f1xx.c ****   * @{
 166:Core/Src/system_stm32f1xx.c ****   */
 167:Core/Src/system_stm32f1xx.c **** 
 168:Core/Src/system_stm32f1xx.c **** /**
 169:Core/Src/system_stm32f1xx.c ****   * @brief  Setup the microcontroller system
 170:Core/Src/system_stm32f1xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 171:Core/Src/system_stm32f1xx.c ****   *         SystemCoreClock variable.
 172:Core/Src/system_stm32f1xx.c ****   * @note   This function should be used only after reset.
 173:Core/Src/system_stm32f1xx.c ****   * @param  None
 174:Core/Src/system_stm32f1xx.c ****   * @retval None
 175:Core/Src/system_stm32f1xx.c ****   */
 176:Core/Src/system_stm32f1xx.c **** void SystemInit (void)
 177:Core/Src/system_stm32f1xx.c **** {
  28              		.loc 1 177 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE65:
  37 0002 00BF     		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  38              		.align	2
  39              		.global	SystemCoreClockUpdate
  40              		.thumb
  41              		.thumb_func
  43              	SystemCoreClockUpdate:
  44              	.LFB66:
 178:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xE) || defined(STM32F101xE) || defined(STM32F101xG) || defined(STM32F103xE) ||
 179:Core/Src/system_stm32f1xx.c ****   #ifdef DATA_IN_ExtSRAM
 180:Core/Src/system_stm32f1xx.c ****     SystemInit_ExtMemCtl(); 
 181:Core/Src/system_stm32f1xx.c ****   #endif /* DATA_IN_ExtSRAM */
 182:Core/Src/system_stm32f1xx.c **** #endif 
 183:Core/Src/system_stm32f1xx.c **** 
 184:Core/Src/system_stm32f1xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 185:Core/Src/system_stm32f1xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 186:Core/Src/system_stm32f1xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM.
 187:Core/Src/system_stm32f1xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 5


 188:Core/Src/system_stm32f1xx.c **** }
 189:Core/Src/system_stm32f1xx.c **** 
 190:Core/Src/system_stm32f1xx.c **** /**
 191:Core/Src/system_stm32f1xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 192:Core/Src/system_stm32f1xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 193:Core/Src/system_stm32f1xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 194:Core/Src/system_stm32f1xx.c ****   *         other parameters.
 195:Core/Src/system_stm32f1xx.c ****   *           
 196:Core/Src/system_stm32f1xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 197:Core/Src/system_stm32f1xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 198:Core/Src/system_stm32f1xx.c ****   *         based on this variable will be incorrect.         
 199:Core/Src/system_stm32f1xx.c ****   *     
 200:Core/Src/system_stm32f1xx.c ****   * @note   - The system frequency computed by this function is not the real 
 201:Core/Src/system_stm32f1xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 202:Core/Src/system_stm32f1xx.c ****   *           constant and the selected clock source:
 203:Core/Src/system_stm32f1xx.c ****   *             
 204:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 205:Core/Src/system_stm32f1xx.c ****   *                                              
 206:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 207:Core/Src/system_stm32f1xx.c ****   *                          
 208:Core/Src/system_stm32f1xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 209:Core/Src/system_stm32f1xx.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 210:Core/Src/system_stm32f1xx.c ****   *         
 211:Core/Src/system_stm32f1xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f1xx.h file (default value
 212:Core/Src/system_stm32f1xx.c ****   *             8 MHz) but the real value may vary depending on the variations
 213:Core/Src/system_stm32f1xx.c ****   *             in voltage and temperature.   
 214:Core/Src/system_stm32f1xx.c ****   *    
 215:Core/Src/system_stm32f1xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f1xx.h file (default value
 216:Core/Src/system_stm32f1xx.c ****   *              8 MHz or 25 MHz, depending on the product used), user has to ensure
 217:Core/Src/system_stm32f1xx.c ****   *              that HSE_VALUE is same as the real frequency of the crystal used.
 218:Core/Src/system_stm32f1xx.c ****   *              Otherwise, this function may have wrong result.
 219:Core/Src/system_stm32f1xx.c ****   *                
 220:Core/Src/system_stm32f1xx.c ****   *         - The result of this function could be not correct when using fractional
 221:Core/Src/system_stm32f1xx.c ****   *           value for HSE crystal.
 222:Core/Src/system_stm32f1xx.c ****   * @param  None
 223:Core/Src/system_stm32f1xx.c ****   * @retval None
 224:Core/Src/system_stm32f1xx.c ****   */
 225:Core/Src/system_stm32f1xx.c **** void SystemCoreClockUpdate (void)
 226:Core/Src/system_stm32f1xx.c **** {
  45              		.loc 1 226 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50              	.LVL0:
 227:Core/Src/system_stm32f1xx.c ****   uint32_t tmp = 0U, pllmull = 0U, pllsource = 0U;
 228:Core/Src/system_stm32f1xx.c **** 
 229:Core/Src/system_stm32f1xx.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 230:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1source = 0U, prediv1factor = 0U, prediv2factor = 0U, pll2mull = 0U;
 231:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */
 232:Core/Src/system_stm32f1xx.c **** 
 233:Core/Src/system_stm32f1xx.c **** #if defined(STM32F100xB) || defined(STM32F100xE)
 234:Core/Src/system_stm32f1xx.c ****   uint32_t prediv1factor = 0U;
 235:Core/Src/system_stm32f1xx.c **** #endif /* STM32F100xB or STM32F100xE */
 236:Core/Src/system_stm32f1xx.c ****     
 237:Core/Src/system_stm32f1xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 238:Core/Src/system_stm32f1xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 6


  51              		.loc 1 238 0
  52 0000 1F4B     		ldr	r3, .L11
  53 0002 5B68     		ldr	r3, [r3, #4]
  54 0004 03F00C03 		and	r3, r3, #12
  55              	.LVL1:
 239:Core/Src/system_stm32f1xx.c ****   
 240:Core/Src/system_stm32f1xx.c ****   switch (tmp)
  56              		.loc 1 240 0
  57 0008 042B     		cmp	r3, #4
  58 000a 06D0     		beq	.L4
  59 000c 082B     		cmp	r3, #8
  60 000e 08D0     		beq	.L5
  61 0010 3BBB     		cbnz	r3, .L10
 241:Core/Src/system_stm32f1xx.c ****   {
 242:Core/Src/system_stm32f1xx.c ****     case 0x00U:  /* HSI used as system clock */
 243:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
  62              		.loc 1 243 0
  63 0012 1C4A     		ldr	r2, .L11+4
  64 0014 1C4B     		ldr	r3, .L11+8
  65              	.LVL2:
  66 0016 1A60     		str	r2, [r3]
 244:Core/Src/system_stm32f1xx.c ****       break;
  67              		.loc 1 244 0
  68 0018 26E0     		b	.L7
  69              	.LVL3:
  70              	.L4:
 245:Core/Src/system_stm32f1xx.c ****     case 0x04U:  /* HSE used as system clock */
 246:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSE_VALUE;
  71              		.loc 1 246 0
  72 001a 1A4A     		ldr	r2, .L11+4
  73 001c 1A4B     		ldr	r3, .L11+8
  74              	.LVL4:
  75 001e 1A60     		str	r2, [r3]
 247:Core/Src/system_stm32f1xx.c ****       break;
  76              		.loc 1 247 0
  77 0020 22E0     		b	.L7
  78              	.LVL5:
  79              	.L5:
 248:Core/Src/system_stm32f1xx.c ****     case 0x08U:  /* PLL used as system clock */
 249:Core/Src/system_stm32f1xx.c **** 
 250:Core/Src/system_stm32f1xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 251:Core/Src/system_stm32f1xx.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
  80              		.loc 1 251 0
  81 0022 174A     		ldr	r2, .L11
  82 0024 5368     		ldr	r3, [r2, #4]
  83              	.LVL6:
 252:Core/Src/system_stm32f1xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  84              		.loc 1 252 0
  85 0026 5268     		ldr	r2, [r2, #4]
  86              	.LVL7:
 253:Core/Src/system_stm32f1xx.c ****       
 254:Core/Src/system_stm32f1xx.c **** #if !defined(STM32F105xC) && !defined(STM32F107xC)      
 255:Core/Src/system_stm32f1xx.c ****       pllmull = ( pllmull >> 18U) + 2U;
  87              		.loc 1 255 0
  88 0028 C3F38343 		ubfx	r3, r3, #18, #4
  89              	.LVL8:
  90 002c 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 7


  91              	.LVL9:
 256:Core/Src/system_stm32f1xx.c ****       
 257:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
  92              		.loc 1 257 0
  93 002e 12F4803F 		tst	r2, #65536
  94 0032 05D1     		bne	.L8
 258:Core/Src/system_stm32f1xx.c ****       {
 259:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 260:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
  95              		.loc 1 260 0
  96 0034 154A     		ldr	r2, .L11+12
  97              	.LVL10:
  98 0036 02FB03F3 		mul	r3, r2, r3
  99              	.LVL11:
 100 003a 134A     		ldr	r2, .L11+8
 101 003c 1360     		str	r3, [r2]
 102 003e 13E0     		b	.L7
 103              	.LVL12:
 104              	.L8:
 261:Core/Src/system_stm32f1xx.c ****       }
 262:Core/Src/system_stm32f1xx.c ****       else
 263:Core/Src/system_stm32f1xx.c ****       {
 264:Core/Src/system_stm32f1xx.c ****  #if defined(STM32F100xB) || defined(STM32F100xE)
 265:Core/Src/system_stm32f1xx.c ****        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 266:Core/Src/system_stm32f1xx.c ****        /* HSE oscillator clock selected as PREDIV1 clock entry */
 267:Core/Src/system_stm32f1xx.c ****        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 268:Core/Src/system_stm32f1xx.c ****  #else
 269:Core/Src/system_stm32f1xx.c ****         /* HSE selected as PLL clock entry */
 270:Core/Src/system_stm32f1xx.c ****         if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
 105              		.loc 1 270 0
 106 0040 0F4A     		ldr	r2, .L11
 107              	.LVL13:
 108 0042 5268     		ldr	r2, [r2, #4]
 109 0044 12F4003F 		tst	r2, #131072
 110 0048 05D0     		beq	.L9
 271:Core/Src/system_stm32f1xx.c ****         {/* HSE oscillator clock divided by 2 */
 272:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
 111              		.loc 1 272 0
 112 004a 104A     		ldr	r2, .L11+12
 113 004c 02FB03F3 		mul	r3, r2, r3
 114              	.LVL14:
 115 0050 0D4A     		ldr	r2, .L11+8
 116 0052 1360     		str	r3, [r2]
 117 0054 08E0     		b	.L7
 118              	.LVL15:
 119              	.L9:
 273:Core/Src/system_stm32f1xx.c ****         }
 274:Core/Src/system_stm32f1xx.c ****         else
 275:Core/Src/system_stm32f1xx.c ****         {
 276:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = HSE_VALUE * pllmull;
 120              		.loc 1 276 0
 121 0056 0B4A     		ldr	r2, .L11+4
 122 0058 02FB03F3 		mul	r3, r2, r3
 123              	.LVL16:
 124 005c 0A4A     		ldr	r2, .L11+8
 125 005e 1360     		str	r3, [r2]
 126 0060 02E0     		b	.L7
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 8


 127              	.LVL17:
 128              	.L10:
 277:Core/Src/system_stm32f1xx.c ****         }
 278:Core/Src/system_stm32f1xx.c ****  #endif
 279:Core/Src/system_stm32f1xx.c ****       }
 280:Core/Src/system_stm32f1xx.c **** #else
 281:Core/Src/system_stm32f1xx.c ****       pllmull = pllmull >> 18U;
 282:Core/Src/system_stm32f1xx.c ****       
 283:Core/Src/system_stm32f1xx.c ****       if (pllmull != 0x0DU)
 284:Core/Src/system_stm32f1xx.c ****       {
 285:Core/Src/system_stm32f1xx.c ****          pllmull += 2U;
 286:Core/Src/system_stm32f1xx.c ****       }
 287:Core/Src/system_stm32f1xx.c ****       else
 288:Core/Src/system_stm32f1xx.c ****       { /* PLL multiplication factor = PLL input clock * 6.5 */
 289:Core/Src/system_stm32f1xx.c ****         pllmull = 13U / 2U; 
 290:Core/Src/system_stm32f1xx.c ****       }
 291:Core/Src/system_stm32f1xx.c ****             
 292:Core/Src/system_stm32f1xx.c ****       if (pllsource == 0x00U)
 293:Core/Src/system_stm32f1xx.c ****       {
 294:Core/Src/system_stm32f1xx.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 295:Core/Src/system_stm32f1xx.c ****         SystemCoreClock = (HSI_VALUE >> 1U) * pllmull;
 296:Core/Src/system_stm32f1xx.c ****       }
 297:Core/Src/system_stm32f1xx.c ****       else
 298:Core/Src/system_stm32f1xx.c ****       {/* PREDIV1 selected as PLL clock entry */
 299:Core/Src/system_stm32f1xx.c ****         
 300:Core/Src/system_stm32f1xx.c ****         /* Get PREDIV1 clock source and division factor */
 301:Core/Src/system_stm32f1xx.c ****         prediv1source = RCC->CFGR2 & RCC_CFGR2_PREDIV1SRC;
 302:Core/Src/system_stm32f1xx.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1U;
 303:Core/Src/system_stm32f1xx.c ****         
 304:Core/Src/system_stm32f1xx.c ****         if (prediv1source == 0U)
 305:Core/Src/system_stm32f1xx.c ****         { 
 306:Core/Src/system_stm32f1xx.c ****           /* HSE oscillator clock selected as PREDIV1 clock entry */
 307:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull;          
 308:Core/Src/system_stm32f1xx.c ****         }
 309:Core/Src/system_stm32f1xx.c ****         else
 310:Core/Src/system_stm32f1xx.c ****         {/* PLL2 clock selected as PREDIV1 clock entry */
 311:Core/Src/system_stm32f1xx.c ****           
 312:Core/Src/system_stm32f1xx.c ****           /* Get PREDIV2 division factor and PLL2 multiplication factor */
 313:Core/Src/system_stm32f1xx.c ****           prediv2factor = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> 4U) + 1U;
 314:Core/Src/system_stm32f1xx.c ****           pll2mull = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> 8U) + 2U; 
 315:Core/Src/system_stm32f1xx.c ****           SystemCoreClock = (((HSE_VALUE / prediv2factor) * pll2mull) / prediv1factor) * pllmull;  
 316:Core/Src/system_stm32f1xx.c ****         }
 317:Core/Src/system_stm32f1xx.c ****       }
 318:Core/Src/system_stm32f1xx.c **** #endif /* STM32F105xC */ 
 319:Core/Src/system_stm32f1xx.c ****       break;
 320:Core/Src/system_stm32f1xx.c **** 
 321:Core/Src/system_stm32f1xx.c ****     default:
 322:Core/Src/system_stm32f1xx.c ****       SystemCoreClock = HSI_VALUE;
 129              		.loc 1 322 0
 130 0062 084A     		ldr	r2, .L11+4
 131 0064 084B     		ldr	r3, .L11+8
 132              	.LVL18:
 133 0066 1A60     		str	r2, [r3]
 134              	.LVL19:
 135              	.L7:
 323:Core/Src/system_stm32f1xx.c ****       break;
 324:Core/Src/system_stm32f1xx.c ****   }
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 9


 325:Core/Src/system_stm32f1xx.c ****   
 326:Core/Src/system_stm32f1xx.c ****   /* Compute HCLK clock frequency ----------------*/
 327:Core/Src/system_stm32f1xx.c ****   /* Get HCLK prescaler */
 328:Core/Src/system_stm32f1xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 136              		.loc 1 328 0
 137 0068 054B     		ldr	r3, .L11
 138 006a 5B68     		ldr	r3, [r3, #4]
 139 006c C3F30313 		ubfx	r3, r3, #4, #4
 140 0070 074A     		ldr	r2, .L11+16
 141 0072 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 142              	.LVL20:
 329:Core/Src/system_stm32f1xx.c ****   /* HCLK clock frequency */
 330:Core/Src/system_stm32f1xx.c ****   SystemCoreClock >>= tmp;  
 143              		.loc 1 330 0
 144 0074 044A     		ldr	r2, .L11+8
 145 0076 1368     		ldr	r3, [r2]
 146 0078 CB40     		lsrs	r3, r3, r1
 147 007a 1360     		str	r3, [r2]
 148 007c 7047     		bx	lr
 149              	.L12:
 150 007e 00BF     		.align	2
 151              	.L11:
 152 0080 00100240 		.word	1073876992
 153 0084 00127A00 		.word	8000000
 154 0088 00000000 		.word	.LANCHOR0
 155 008c 00093D00 		.word	4000000
 156 0090 00000000 		.word	.LANCHOR1
 157              		.cfi_endproc
 158              	.LFE66:
 160              		.global	APBPrescTable
 161              		.global	AHBPrescTable
 162              		.global	SystemCoreClock
 163              		.section	.rodata.AHBPrescTable,"a",%progbits
 164              		.align	2
 165              		.set	.LANCHOR1,. + 0
 168              	AHBPrescTable:
 169 0000 00       		.byte	0
 170 0001 00       		.byte	0
 171 0002 00       		.byte	0
 172 0003 00       		.byte	0
 173 0004 00       		.byte	0
 174 0005 00       		.byte	0
 175 0006 00       		.byte	0
 176 0007 00       		.byte	0
 177 0008 01       		.byte	1
 178 0009 02       		.byte	2
 179 000a 03       		.byte	3
 180 000b 04       		.byte	4
 181 000c 06       		.byte	6
 182 000d 07       		.byte	7
 183 000e 08       		.byte	8
 184 000f 09       		.byte	9
 185              		.section	.rodata.APBPrescTable,"a",%progbits
 186              		.align	2
 189              	APBPrescTable:
 190 0000 00       		.byte	0
 191 0001 00       		.byte	0
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 10


 192 0002 00       		.byte	0
 193 0003 00       		.byte	0
 194 0004 01       		.byte	1
 195 0005 02       		.byte	2
 196 0006 03       		.byte	3
 197 0007 04       		.byte	4
 198              		.section	.data.SystemCoreClock,"aw",%progbits
 199              		.align	2
 200              		.set	.LANCHOR0,. + 0
 203              	SystemCoreClock:
 204 0000 0024F400 		.word	16000000
 205              		.text
 206              	.Letext0:
 207              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\mach
 208              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\
 209              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 210              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 211              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
ARM GAS  C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f1xx.c
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:20     .text.SystemInit:00000000 $t
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:38     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:43     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:152    .text.SystemCoreClockUpdate:00000080 $d
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:189    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:168    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:203    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:164    .rodata.AHBPrescTable:00000000 $d
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:186    .rodata.APBPrescTable:00000000 $d
C:\Users\ROG\AppData\Local\Temp\ccFQge5f.s:199    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
